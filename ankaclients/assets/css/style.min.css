/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2017. MIT licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Roboto,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh;overflow:hidden}.app-wrapper{width:100%;height:100vh;background:#f7f7f7}.no-opacity{opacity:0}.clearfix:after{content:".";display:block;height:0;clear:both;visibility:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.nav ul{list-style:none}nav.subpage-topbar{background:#ec7161;height:50px;position:relative}nav.subpage-topbar h1,nav.subpage-topbar h2,nav.subpage-topbar h3,nav.subpage-topbar h4,nav.subpage-topbar h5{padding:0;margin:0;text-align:center;color:#fff}nav.subpage-topbar a{text-decoration:none;color:#fff;position:absolute;top:22%}nav.subpage-topbar a i{font-size:2em}nav.subpage-topbar a.btn-back{left:10px}nav.subpage-topbar a.btn-edit-contact,nav.subpage-topbar a.btn-home{right:10px}.header{width:100%;height:165px;background:#ec7161;padding:7px 10px;text-align:center;position:relative}.header h1.title{color:#f2ebe2}.header .search-client{width:100%;position:relative}.header .search-client i{position:absolute;top:22%;left:15px;font-size:1.5em;color:#e3e3e3}.header .search-client input{width:100%;height:50px;border-radius:40px;border:none;padding:5px 0 5px 50px;margin-bottom:10px}.header button{border:none;padding:10px;border-radius:50%;background:#00b25a;box-shadow:0 2px 10px #333;position:absolute;bottom:-25px;right:45%}.header button i.add-button{font-size:30px;color:#fff;border-radius:50%}.main nav ul.category-tabs-nav{padding:20px;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:distribute;justify-content:space-around}.main .clients-list-wrapper{padding-top:30px}.main .clients-list-wrapper .clients-list li.client-item{position:relative}.main .clients-list-wrapper .clients-list li.client-item a{display:block;text-decoration:none;padding:12px 15px;border-bottom:1px solid #d3d3d3;margin-bottom:5px}.main .clients-list-wrapper .clients-list li.client-item img{float:left;border-radius:50%;margin-right:25px}.main .clients-list-wrapper .clients-list li.client-item h1{margin:5px;color:#ec7161}.main .clients-list-wrapper .clients-list li.client-item h5{color:grey}.main .clients-list-wrapper .clients-list li.client-item:after{content:"\f2bc";font-family:FontAwesome;font-weight:400;font-style:normal;font-size:2em;position:absolute;right:25px;top:25%;color:#d3d3d3}.contact-header{padding:10px 20px;position:relative}.contact-header img{border-radius:50%;float:left;margin-right:15px}.contact-header .basic-info{float:left}.contact-header .basic-info h1,.contact-header .basic-info h5{padding:0;margin:2px}.contact-header .basic-info .hair-info{margin-top:8px;background:#fff;padding:5px 20px;font-size:1.1em}.contact-header .reach-client{position:absolute;right:15px}.contact-header .reach-client a{text-decoration:none;font-size:25px;display:block;background:#00b25a;width:50px;height:50px;line-height:40px;text-align:center;padding:5px;border-radius:50%;color:#fff;margin-bottom:20px}.tabs{padding:10px 0}.tabs li{text-align:center;display:block;width:50%;float:left;padding-bottom:5px;font-size:1.1em;text-transform:uppercase;color:#e8503d}.tabs li.active{border-bottom:2px solid #ec7161}.tab-content{padding:0 10px}.tab-content .general-info{font-size:1.2em}.tab-content .general-info span{font-weight:700}.tab-content .color-list-wrapper .filter{width:80%;float:left;position:relative}.tab-content .color-list-wrapper .filter input{width:100%;height:50px;border:1px solid #d3d3d3;border-radius:50px;padding-left:40px}.tab-content .color-list-wrapper .filter i{position:absolute;top:35%;left:15px;font-size:1.2em;color:#d3d3d3}.tab-content .color-list-wrapper a.btn-add-color{display:block;text-align:right;margin-bottom:10px;margin-right:6px}.tab-content .color-list-wrapper a.btn-add-color i{font-size:2em;color:#fff;width:50px;height:50px;line-height:52px;background:#ec7161;text-align:center;border-radius:50%}.tab-content .color-list-wrapper .coloringList li{position:relative;background:#fff}.tab-content .color-list-wrapper .coloringList li a{display:block;padding:10px 25px;text-decoration:none;color:#ec7161;border-bottom:1px solid #d3d3d3}.tab-content .color-list-wrapper .coloringList li a p{padding:0;font-size:1.5em}.tab-content .color-list-wrapper .coloringList li a span{position:absolute;right:5px;bottom:10px;color:#333}.color-card-wrapper .color-header{padding:20px 10px;position:relative}.color-card-wrapper .color-header img{border-radius:50%;float:left;margin-right:15px}.color-card-wrapper .color-header h1{margin-bottom:5px}.color-card-wrapper .color-header a.btn-edit-color{position:absolute;right:10px;top:40%;font-size:2em;color:#333}.color-card-wrapper .color-info,.color-card-wrapper .oxidant-info{margin:10px;background:#fff;padding:5px 10px}.color-card-wrapper .color-info span,.color-card-wrapper .oxidant-info span{display:block;text-align:right;color:#ec7161}.color-card-wrapper .color-info span i,.color-card-wrapper .oxidant-info span i{margin-left:5px}.color-card-wrapper .color-info p,.color-card-wrapper .oxidant-info p{font-size:1.2em}.color-card-wrapper .color-info ul li{border-bottom:1px dashed #ec7161;margin-bottom:5px}ul{list-style-type:none;padding:0;margin:0}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
